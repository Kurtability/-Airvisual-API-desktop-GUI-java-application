/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package SCD2_2021_Exam;

import model.InputFacade;
import model.ModelFacade;
import model.ModelFacadeImpl;
import model.OutputFacade;
import org.junit.Test;

import java.io.IOException;

import static org.junit.Assert.*;
import static org.mockito.Mockito.*;

public class ModelFacadeTest {

    @Test
    public void listSupportedCountriesTest_success() throws IOException, InterruptedException {
        // make a mock of the returned input api for this specific function

        InputFacade inputFacade = mock(InputFacade.class);
        OutputFacade outputFacade = mock(OutputFacade.class);

        ModelFacade model = new ModelFacadeImpl(inputFacade,outputFacade);

        String mockResponse = "success";

        when(inputFacade.Input_listSupportedCountries()).thenReturn(mockResponse);


        // test how my model handles the return
        assertEquals(model.Input_listSupportedCountries(),mockResponse);
        verify(inputFacade).Input_listSupportedCountries();
    }

    @Test
    public void listSupportedStatesFromChosenCountryTest_success() throws IOException, InterruptedException{
        // make a mock of the returned input api for this specific function

        InputFacade inputFacade = mock(InputFacade.class);
        OutputFacade outputFacade = mock(OutputFacade.class);

        ModelFacade model = new ModelFacadeImpl(inputFacade,outputFacade);

        String mockCountry = "China";
        String mockResponse = "success";

        when(inputFacade.Input_listSupportedStatesFromChosenCountry(mockCountry)).thenReturn(mockResponse);


        // test how my model handles the return
        assertEquals(model.Input_listSupportedStatesFromChosenCountry(mockCountry),mockResponse);
        verify(inputFacade).Input_listSupportedStatesFromChosenCountry(mockCountry);
    }

    @Test
    public void listSupportedCitiesFromChosenStateTest_success() throws IOException, InterruptedException {
        // make a mock of the returned input api for this specific function

        InputFacade inputFacade = mock(InputFacade.class);
        OutputFacade outputFacade = mock(OutputFacade.class);

        ModelFacade model = new ModelFacadeImpl(inputFacade,outputFacade);

        String mockState = "Beijing";
        String mockCountry = "China";
        String mockResponse = "success";

        when(inputFacade.Input_listSupportedCitiesFromChosenState(mockState,mockCountry)).thenReturn(mockResponse);


        // test how my model handles the return
        assertEquals(model.Input_listSupportedCitiesFromChosenState(mockState,mockCountry),mockResponse);
        verify(inputFacade).Input_listSupportedCitiesFromChosenState(mockState,mockCountry);
    }

    @Test
    public void listSpecifiedCityDataFromChosenStateTest_success() throws IOException, InterruptedException {
        // make a mock of the returned input api for this specific function

        InputFacade inputFacade = mock(InputFacade.class);
        OutputFacade outputFacade = mock(OutputFacade.class);

        ModelFacade model = new ModelFacadeImpl(inputFacade,outputFacade);

        String mockCity = "Beijing";
        String mockState = "Beijing";
        String mockCountry = "China";
        String mockResponse = "success";

        when(inputFacade.Input_listSpecifiedCityDataFromChosenState(mockCity,mockState,mockCountry)).thenReturn(mockResponse);


        // test how my model handles the return
        assertEquals(model.Input_listSpecifiedCityDataFromChosenState(mockCity,mockState,mockCountry),mockResponse);
        verify(inputFacade).Input_listSpecifiedCityDataFromChosenState(mockCity,mockState,mockCountry);
    }
}
